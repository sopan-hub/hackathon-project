"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { summarizeEcoProjectIdeas } from "@/ai/flows/summarize-eco-project-ideas";
import type { CommunityPost } from "@/lib/types";
import { Skeleton } from "@/components/ui/skeleton";
import { Icons } from "@/components/icons";

function PostCard({ post }: { post: CommunityPost }) {
  const [summary, setSummary] = useState("");
  const [loading, setLoading] = useState(false);

  const handleSummarize = async () => {
    setLoading(true);
    try {
      const result = await summarizeEcoProjectIdeas({ projectIdeaText: post.content });
      setSummary(result.summary);
    } catch (error) {
      console.error("Failed to summarize:", error);
      setSummary("Sorry, we couldn't generate a summary at this time.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="eco-card">
        <div className="eco-card-title !text-xl !normal-case">{post.title}</div>
        <div className="eco-card-icon">
            <Avatar>
                <AvatarImage src={post.authorAvatarUrl} alt={post.author} />
                <AvatarFallback>{post.author.charAt(0)}</AvatarFallback>
            </Avatar>
        </div>
        <div className="eco-card-content">
            <CardDescription className="mb-4">
              by {post.author} &bull; {post.timestamp}
            </CardDescription>
            <p className="text-foreground/90">{post.content}</p>
             <Dialog>
                <DialogTrigger asChild>
                    <Button variant="outline" size="sm" onClick={handleSummarize} className="mt-4">
                    <Icons.lightbulb className="mr-2 h-4 w-4" />
                    Summarize with AI
                    </Button>
                </DialogTrigger>
                <DialogContent>
                    <DialogHeader>
                    <DialogTitle>AI Summary of "{post.title}"</DialogTitle>
                    <DialogDescription>
                        Here is a quick summary generated by our AI.
                    </DialogDescription>
                    </DialogHeader>
                    <div className="py-4">
                    {loading && <Skeleton className="h-20 w-full" />}
                    {!loading && <p>{summary}</p>}
                    </div>
                </DialogContent>
            </Dialog>
        </div>
    </div>
  );
}

export function CommunityClient({ posts }: { posts: CommunityPost[] }) {
  return (
    <div className="grid gap-8 lg:grid-cols-3">
      <div className="lg:col-span-1">
        <div className="eco-card">
          <div className="eco-card-title !text-xl !normal-case">Share a New Idea</div>
           <div className="eco-card-icon">
                <Icons.lightbulb className="bg-gradient-to-r from-yellow-400 to-orange-500" />
            </div>
          <div className="eco-card-content space-y-4">
             <CardDescription>What's on your mind?</CardDescription>
            <div className="space-y-2">
              <Label htmlFor="title">Title</Label>
              <Input id="title" placeholder="e.g., School Recycling Program" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="content">Your Idea</Label>
              <Textarea
                id="content"
                placeholder="Describe your idea in detail..."
                rows={5}
              />
            </div>
             <Button className="w-full">Post Idea</Button>
          </div>
        </div>
      </div>
      <div className="lg:col-span-2 space-y-6">
        {posts.map((post) => (
          <PostCard key={post.id} post={post} />
        ))}
      </div>
    </div>
  );
}
