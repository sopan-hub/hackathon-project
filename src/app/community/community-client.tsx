"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { summarizeEcoProjectIdeas } from "@/ai/flows/summarize-eco-project-ideas";
import type { CommunityPost } from "@/lib/types";
import { Skeleton } from "@/components/ui/skeleton";
import { Icons } from "@/components/icons";

function PostCard({ post }: { post: CommunityPost }) {
  const [summary, setSummary] = useState("");
  const [loading, setLoading] = useState(false);

  const handleSummarize = async () => {
    setLoading(true);
    try {
      const result = await summarizeEcoProjectIdeas({ projectIdeaText: post.content });
      setSummary(result.summary);
    } catch (error) {
      console.error("Failed to summarize:", error);
      setSummary("Sorry, we couldn't generate a summary at this time.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <Card>
      <CardHeader>
        <div className="flex items-center gap-4">
          <Avatar>
            <AvatarImage src={post.authorAvatarUrl} alt={post.author} />
            <AvatarFallback>{post.author.charAt(0)}</AvatarFallback>
          </Avatar>
          <div>
            <CardTitle className="font-headline text-lg">{post.title}</CardTitle>
            <CardDescription>
              by {post.author} &bull; {post.timestamp}
            </CardDescription>
          </div>
        </div>
      </CardHeader>
      <CardContent>
        <p className="text-foreground/90">{post.content}</p>
      </CardContent>
      <CardFooter>
        <Dialog>
          <DialogTrigger asChild>
            <Button variant="outline" size="sm" onClick={handleSummarize}>
              <Icons.lightbulb className="mr-2 h-4 w-4" />
              Summarize with AI
            </Button>
          </DialogTrigger>
          <DialogContent>
            <DialogHeader>
              <DialogTitle>AI Summary of "{post.title}"</DialogTitle>
              <DialogDescription>
                Here is a quick summary generated by our AI.
              </DialogDescription>
            </DialogHeader>
            <div className="py-4">
              {loading && <Skeleton className="h-20 w-full" />}
              {!loading && <p>{summary}</p>}
            </div>
          </DialogContent>
        </Dialog>
      </CardFooter>
    </Card>
  );
}

export function CommunityClient({ posts }: { posts: CommunityPost[] }) {
  return (
    <div className="grid gap-8 lg:grid-cols-3">
      <div className="lg:col-span-1">
        <Card>
          <CardHeader>
            <CardTitle className="font-headline">Share a New Idea</CardTitle>
            <CardDescription>What's on your mind?</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="title">Title</Label>
              <Input id="title" placeholder="e.g., School Recycling Program" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="content">Your Idea</Label>
              <Textarea
                id="content"
                placeholder="Describe your idea in detail..."
                rows={5}
              />
            </div>
          </CardContent>
          <CardFooter>
            <Button className="w-full">Post Idea</Button>
          </CardFooter>
        </Card>
      </div>
      <div className="lg:col-span-2 space-y-6">
        {posts.map((post) => (
          <PostCard key={post.id} post={post} />
        ))}
      </div>
    </div>
  );
}
